package djenerics;

class T1<T> {
    private T t;                // переменная типа Т
    T1() {}                      // коструктор без параметра
    T1(T t) {                    // конструктор Т с параметром Т типа Т
        this.t = t;                  // присвоение переменной типа Т Т
    }
    T T(T t) {                  // метод типа Т с параметром Т типа Т
        return t;
    }
    void setT(T t) {            // метод set с параметрами
        this.t = t;
    }
    void setT() {   }            // перегруженный метод Set

    T getT() { return t; }      // метод get для возврата переменной Т
    T getT(T t) {               // перегруженный метод GetT
        return t;
    }
    //T T() { return T; }       // метод типа Т без параметра
    // вступает в кофликт со статическим методом T поэтому закоменчен
    static <T> T1<T> T() {  // статический метод типа Т без параметра
        return new T1<>();   // New - имя пакета для осутствия конфликта
    }
}